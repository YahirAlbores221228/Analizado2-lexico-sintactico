
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DOT FUNC IDENTIFIER IMPORT LLAVE_ABIERTA LLAVE_CERRADA LPAREN PACKAGE PRINTLN RPAREN SEMICOLON STRINGprogram : package_clause import_clause function_clausepackage_clause : PACKAGE IDENTIFIERimport_clause : IMPORT STRINGfunction_clause : FUNC IDENTIFIER LPAREN RPAREN LLAVE_ABIERTA statements LLAVE_CERRADAstatements : statement\n                  | statement statementsstatement : statement_printstatement_print : IDENTIFIER DOT PRINTLN LPAREN STRING RPAREN SEMICOLON'
    
_lr_action_items = {'PACKAGE':([0,],[3,]),'$end':([1,7,19,],[0,-1,-4,]),'IMPORT':([2,6,],[5,-2,]),'IDENTIFIER':([3,8,13,16,17,25,],[6,10,14,14,-7,-8,]),'FUNC':([4,9,],[8,-3,]),'STRING':([5,22,],[9,23,]),'LPAREN':([10,21,],[11,22,]),'RPAREN':([11,23,],[12,24,]),'LLAVE_ABIERTA':([12,],[13,]),'DOT':([14,],[18,]),'LLAVE_CERRADA':([15,16,17,20,25,],[19,-5,-7,-6,-8,]),'PRINTLN':([18,],[21,]),'SEMICOLON':([24,],[25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'package_clause':([0,],[2,]),'import_clause':([2,],[4,]),'function_clause':([4,],[7,]),'statements':([13,16,],[15,20,]),'statement':([13,16,],[16,16,]),'statement_print':([13,16,],[17,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> package_clause import_clause function_clause','program',3,'p_program','app.py',67),
  ('package_clause -> PACKAGE IDENTIFIER','package_clause',2,'p_package_clause','app.py',71),
  ('import_clause -> IMPORT STRING','import_clause',2,'p_import_clause','app.py',75),
  ('function_clause -> FUNC IDENTIFIER LPAREN RPAREN LLAVE_ABIERTA statements LLAVE_CERRADA','function_clause',7,'p_function_clause','app.py',79),
  ('statements -> statement','statements',1,'p_statements','app.py',83),
  ('statements -> statement statements','statements',2,'p_statements','app.py',84),
  ('statement -> statement_print','statement',1,'p_statement','app.py',88),
  ('statement_print -> IDENTIFIER DOT PRINTLN LPAREN STRING RPAREN SEMICOLON','statement_print',7,'p_statement_print','app.py',92),
]
